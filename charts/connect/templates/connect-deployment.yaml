{{- if .Values.connect.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.connect.applicationName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: connect
    {{- include "onepassword-connect.labels" . | nindent 4 }}
  {{- with .Values.connect.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.connect.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.connect.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.connect.applicationName }}
  template:
    metadata:
      labels:
        app: {{ .Values.connect.applicationName }}
        version: "{{ tpl .Values.connect.version . }}"
        app.kubernetes.io/component: connect
      {{- with .Values.connect.podLabels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.connect.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.connect.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.connect.priorityClassName }}
      priorityClassName: {{ .Values.connect.priorityClassName }}
      {{- end }}
      {{- with .Values.connect.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "onepassword.volumeName" . }}
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (print (include "common.names.fullname" .)) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name:  {{ .Values.connect.credentialsName }}
          secret:
            secretName: {{ .Values.connect.credentialsName }}
            items:
              key: json
              path: 1password-credentials.json
            defaultMode: 0400
        {{- if .Values.connect.tls.enabled }}
        - name: tls-cert
          secret:
            secretName: {{ .Values.connect.tls.secret }}
        {{- end }}
      tolerations:
      {{- toYaml .Values.connect.tolerations | nindent 8 }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "onepassword.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - sh
            - -c
            - |
              RUNTIME_UID=$(id -u)
              if [ -n "${RUNTIME_UID}" ]; then
                OWNER_UID=${RUNTIME_UID}
              else
                OWNER_UID="{{ .Values.containerSecurityContext.runAsUser }}"
              fi

              GROUP_GUID="{{ .Values.podSecurityContext.fsGroup }}"
              echo "Will set permissions to: ${OWNER_UID}:${GROUP_GUID}"
              
              ls -la /
              ls -la /home
              ls -la "{{ include "onepassword.home.directory" . }}"

              mkdir -pv "{{ include "onepassword.home.directory" . }}/.op/data"
              ls -la "{{ include "onepassword.home.directory" . }}/.op"
              chown -R "${OWNER_UID}:${GROUP_GUID}" "{{ include "onepassword.home.directory" . }}"
              chmod 700 "{{ include "onepassword.home.directory" . }}/.op"
              chmod 700 "{{ include "onepassword.home.directory" . }}/.op/data"
              chmod 700 "{{ include "onepassword.home.directory" . }}/.op/data/files"

          # securityContext:
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- else if ne .Values.volumePermissions.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.volumePermissions.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /home
              name: {{ include "onepassword.volumeName" . }}
        {{- end }}      
      containers:
        - name: {{ .Values.connect.api.name }}
          image: {{ .Values.connect.api.imageRepository }}:{{ tpl .Values.connect.version . }}
          imagePullPolicy: {{ .Values.connect.imagePullPolicy }}
          {{- if .Values.podSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.connect.api.resources | nindent 12 }}
          env:
            - name: HOME
              value: {{ include "onepassword.home.directory" . }}          
            - name: OP_SESSION
              value: {{ include "onepassword.credentialJson.path" .}}/1password-credentials.json
            - name: OP_BUS_PORT
              value: "11220"
            - name: OP_BUS_PEERS
              value: localhost:11221
            {{- if .Values.connect.tls.enabled }}
            - name: OP_TLS_CERT_FILE
              value: /mnt/secrets/certs/tls.crt
            - name: OP_TLS_KEY_FILE
              value: /mnt/secrets/certs/tls.key
            - name: OP_HTTPS_PORT
              value: "{{ .Values.connect.api.httpsPort }}"
            {{- else }}
            - name: OP_HTTP_PORT
              value: "{{ .Values.connect.api.httpPort }}"
            {{- end }}
            - name: OP_LOG_LEVEL
              value: "{{ .Values.connect.api.logLevel }}"
            {{- include "onepassword-connect.profilerConfig" . | indent 12 -}}
            {{- range .Values.connect.customEnvVars }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          {{- if .Values.connect.probes.readiness }}
          readinessProbe:
            httpGet:
              path: /health
              scheme: {{ if .Values.connect.tls.enabled }}HTTPS{{ else }}HTTP{{end}}
              port: {{ include "onepassword-connect.apiPort" . }}
            initialDelaySeconds: 15
          {{ end }}
          {{- if .Values.connect.probes.liveness }}
          livenessProbe:
            httpGet:
              path: /heartbeat
              scheme: {{ if .Values.connect.tls.enabled }}HTTPS{{ else }}HTTP{{end}}
              port: {{ include "onepassword-connect.apiPort" . }}
            failureThreshold: 3
            periodSeconds: 30
            initialDelaySeconds: 15
          {{ end }}
          volumeMounts:
            - mountPath:  /home
              name: {{ include "onepassword.volumeName" . }}
            {{- if .Values.connect.tls.enabled }}
            - name: tls-cert
              mountPath: /mnt/certs
            {{- end }}
            - name: {{ .Values.connect.credentialsName }}
              mountPath: {{ include "onepassword.credentialJson.path" . }}
              readOnly: true
        - name: connect-sync
          image: {{ .Values.connect.sync.imageRepository }}:{{ tpl .Values.connect.version . }}
          imagePullPolicy: {{ .Values.connect.imagePullPolicy }}
          {{- if .Values.podSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.connect.sync.resources | nindent 12 }}
          env:
            - name: HOME
              value: {{ include "onepassword.home.directory" . }}
            - name: OP_HTTP_PORT
              value: "{{ .Values.connect.sync.httpPort }}"
            - name: OP_SESSION
              value: {{ include "onepassword.credentialJson.path" .}}/1password-credentials.json
            - name: OP_BUS_PORT
              value: "11221"
            - name: OP_BUS_PEERS
              value: localhost:11220
            - name: OP_LOG_LEVEL
              value: "{{ .Values.connect.sync.logLevel }}"
            {{- include "onepassword-connect.profilerConfig" . | indent 12 }}
          {{- if .Values.connect.probes.readiness }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.connect.sync.httpPort }}
            initialDelaySeconds: 15
          {{ end }}
          {{- if .Values.connect.probes.liveness }}
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: {{ .Values.connect.sync.httpPort }}
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 30
            initialDelaySeconds: 15
          {{ end }}
          volumeMounts:
            - mountPath:  /home
              name: {{ include "onepassword.volumeName" . }}
            - name: {{ .Values.connect.credentialsName }}
              mountPath: {{ include "onepassword.credentialJson.path" . }}
              readOnly: true
        {{- if .Values.connect.profiler.enabled }}
        - name: profiler-data
          image: alpine
          command: [ 'sleep', 'infinity' ]
          volumeMounts:
            - name: {{ include "onepassword.volumeName" . }}
              mountPath: /data
              subPath: profiler
        {{- end }}
      {{- with .Values.connect.imagePullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . | quote }}
      {{- end }}
      {{- end }}
{{- end }}
